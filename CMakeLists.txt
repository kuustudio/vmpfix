# This file is automatically generated from cmake.toml - DO NOT EDIT
# See https://github.com/build-cpp/cmkr for more information

cmake_minimum_required(VERSION 3.15)

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_BINARY_DIR)
	message(FATAL_ERROR "In-tree builds are not supported. Run CMake from a separate directory: cmake -B build")
endif()

set(CMKR_ROOT_PROJECT OFF)
if(CMAKE_CURRENT_SOURCE_DIR STREQUAL CMAKE_SOURCE_DIR)
	set(CMKR_ROOT_PROJECT ON)

	# Bootstrap cmkr and automatically regenerate CMakeLists.txt
	include(cmkr.cmake OPTIONAL RESULT_VARIABLE CMKR_INCLUDE_RESULT)
	if(CMKR_INCLUDE_RESULT)
		cmkr()
	endif()

	# Enable folder support
	set_property(GLOBAL PROPERTY USE_FOLDERS ON)

	# Create a configure-time dependency on cmake.toml to improve IDE support
	set_property(DIRECTORY APPEND PROPERTY CMAKE_CONFIGURE_DEPENDS cmake.toml)
endif()

add_subdirectory(Blackbone/src)
if(CMAKE_SIZEOF_VOID_P EQUAL 8)
    link_directories(Blackbone/src/3rd_party/DIA/lib/amd64)
elseif(CMAKE_SIZEOF_VOID_P EQUAL 4)
    link_directories(Blackbone/src/3rd_party/DIA/lib)
endif()

project(vmpfix)

include(FetchContent)

# Fix warnings about DOWNLOAD_EXTRACT_TIMESTAMP
if(POLICY CMP0135)
	cmake_policy(SET CMP0135 NEW)
endif()
message(STATUS "Fetching argparse...")
FetchContent_Declare(argparse
	GIT_REPOSITORY
		"https://github.com/p-ranav/argparse.git"
)
FetchContent_MakeAvailable(argparse)

message(STATUS "Fetching linux-pe...")
FetchContent_Declare(linux-pe
	GIT_REPOSITORY
		"https://github.com/can1357/linux-pe.git"
)
FetchContent_MakeAvailable(linux-pe)

message(STATUS "Fetching Zydis (875c8a75344d0ad71b02bcd2cc5e3acb87e7b003)...")
FetchContent_Declare(Zydis
	GIT_REPOSITORY
		"https://github.com/zyantific/zydis.git"
	GIT_TAG
		875c8a75344d0ad71b02bcd2cc5e3acb87e7b003
)
FetchContent_MakeAvailable(Zydis)

# Target: vmpfix
set(vmpfix_SOURCES
	cmake.toml
	"include/disasm.hpp"
	"include/image_desc.hpp"
	"include/vmp_analyzer.hpp"
	"src/disasm.cpp"
	"src/main.cpp"
	"src/vmp_analyzer.cpp"
)

add_executable(vmpfix)

target_sources(vmpfix PRIVATE ${vmpfix_SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} FILES ${vmpfix_SOURCES})

target_compile_features(vmpfix PRIVATE
	cxx_std_20
)

target_include_directories(vmpfix PRIVATE
	include
	"Blackbone/src"
)

target_link_libraries(vmpfix PRIVATE
	BlackBone
	diaguids
	linux-pe
	Zydis
	argparse
)

get_directory_property(CMKR_VS_STARTUP_PROJECT DIRECTORY ${PROJECT_SOURCE_DIR} DEFINITION VS_STARTUP_PROJECT)
if(NOT CMKR_VS_STARTUP_PROJECT)
	set_property(DIRECTORY ${PROJECT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT vmpfix)
endif()
